name: Docker Compose Actions Workflow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
  
    runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: ./mailservice
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

#       - uses: webfactory/ssh-agent@v0.5.4
#         with:
#             ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ../private.key
          sudo chmod 600 ../private.key
          echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
          SSH_KNOWN_HOSTS: ${{secrets.SSH_KNOWN_HOSTS}}
          SSH_KEY_PATH: ${{ github.workspace }}/../private.key
          
          
#       - name: Install SSH key
#         uses: shimataro/ssh-key-action@v2
#         with:
#           key: ${{ secrets.SSH_PRIVATE_KEY }}
#           name: id_rsa # optional
#           known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
#           if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)


            
#       - name: Build with Maven
#         working-directory: ./mailservice
#         run: mvn clean package spring-boot:repackage
        

      - name: Build the stack
        working-directory: .
        run: docker-compose build --parallel #-H "ssh://78.132.143.84" up #docker-compose up -d
        
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      
      - name: Build the stack
        working-directory: .
        run: docker-compose push #-H "ssh://78.132.143.84" up #docker-compose up -d


#   dockercompose:
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
